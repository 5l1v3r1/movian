#import "skin://commandmenu.skin"
#import "theme://include/separators.view";

$view.settingpage = 0;

onEvent(back, {
  $view.settingpage = 0;
}, $view.settingpage);


widget(deck, {
  .weight = 1;
  .filterConstraintY = true;
  
  widget(container_x, {
    space(1);
    
    commandGroup(.filterConstraintX = true; widget(container_y, {
      
      widget(label, {
	.caption = "Playback settings";
	.align = center;
      });
      HORIZONTAL_SEPARATOR();
      
      widget(label, {
	.caption = "Audio tracks...";
	.focusable = 0.1;
	.align = center;
	.color = select(isHovered() || isFocused(), 1.0, 0.5);
	onEvent(activate, { $view.settingpage = 1; });
      });

      widget(label, {
	.caption = "Subtitle tracks...";
	.focusable = 0.1;
	.align = center;
	.color = select(isHovered() || isFocused(), 1.0, 0.5);
	onEvent(activate, { $view.settingpage = 2; });
      });

      widget(label, {
	.caption = "Timings...";
	.focusable = 0.1;
	.align = center;
	.color = select(isHovered() || isFocused(), 1.0, 0.5);
	onEvent(activate, { $view.settingpage = 3; });
      });

    }));
    space(1);
  });

  widget(container_x, {
    space(1);
    // Page 1 - Audio tracks
    commandGroup(.filterConstraintX = true; widget(container_y, {
      
      widget(label, {
	.caption = "Audio tracks";
	.align = center;
      });
      HORIZONTAL_SEPARATOR();

      widget(list_y, {
	cloner($global.media.current.metadata.audiostreams, container_z, {
	  commandAudioTrack($self.title ?? $self.language ?? $self.source,
			    $self.format,
			    $self.url == $global.media.current.audio.current,
			    selectAudioTrack($self.url));
	});
      });
    }));
    space(1);
  });

  widget(container_x, {
    space(0.1);
    // Page 2 - Subtitle tracks
    commandGroup(.filterConstraintX = true; widget(container_y, {
      
      widget(label, {
	.caption = "Subtitle tracks";
	.align = center;
      });
      HORIZONTAL_SEPARATOR();

      widget(list_y, {
	cloner($global.media.current.metadata.subtitlestreams, container_z, {
	  commandSubtitleTrack($self.title ?? $self.language,
			       $self.format,
			       $self.source,
			       $self.url == $global.media.current.subtitle.current,
			       selectSubtitleTrack($self.url));
	});
      });
    }));
    space(0.1);
  });


  widget(container_x, {
    space(0.1);
    // Page 3 - Timings
    commandGroup(.filterConstraintX = true; widget(list_y, {
      .spacing = 3;

      widget(container_x, {
	widget(label, {
	  .filterConstraintX = true;
	  .caption = "Audio delay";
	});
	commandSlider($global.media.current.avdelta,  -1000, 1000, 10, 
		      int2str($global.media.current.avdelta) + "ms");
      });


      widget(container_x, {
	widget(label, {
	  .filterConstraintX = true;
	  .caption = "Subtitle delay";
	});
	commandSlider($global.media.current.svdelta,  -60, 60, 1, 
		      int2str($global.media.current.svdelta) + "s");
      });
      


    }));
    space(0.1);
  });



  .page = $view.settingpage;
  .effect = flipHorizontal;
  .time = 0.3;
});

