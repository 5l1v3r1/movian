// Common file for all buttons

#define BASECOLOR() {[0.45, 0.45, 0.45]}
#define SELCOLOR() {[1.0, 1.0, 1.0]}

#define _gloss() {
  widget(backdrop, {
    .additive = true;
    .source = "skin://gfx/bar-gloss.png";
    .border = [2,4,2,4];
    .padding = [5,0,5,0];
    .color = [0.3, 0.3, 0.3];
  });
}

#define _glossybutton(ICON, EVENT, ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(displacement, {
    .hidden = HIDDEN;
    .padding = iir(isPressed() * 2, 3, true);

    widget(container_z, {
      widget(backdrop, {
	.focusable = ENABLED;
	.source = "skin://gfx/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	onEvent(activate, EVENT);
	
	widget(icon, {
	  .alpha = select(ENABLED, 1,  0.2);
	  .source = ICON;
	  .sizeScale = SCALE;
	  .shadow = true;
	  .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	});
      });
      _gloss();
    });
  });
}


#define _glossybuttontoggle(ICON, EVENT, STATE, ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(displacement, {
    .hidden = HIDDEN;
    .padding = iir(isPressed() * 2, 3, true);
    widget(container_z, {
      widget(backdrop, {
	.focusable = ENABLED;
	.source = "skin://gfx/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	onEvent(activate, {
	  (STATE) = !STATE;
	});
      
	widget(icon, {
	  .source = ICON;
	  .sizeScale = SCALE;
	  .shadow = true;
	  .color = select(isHovered() || isFocused(), 0.3, 0.0) + select(STATE, 0.6, 0.0);
	});
      });
      _gloss();
    });
  });
}

#define _glossybuttonText(ICON, CAPTION, EVENT,
			  ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(container_y, {
    .hidden = HIDDEN;
    .focusable = ENABLED;
    onEvent(activate, EVENT);
	
    widget(container_z, {
      widget(backdrop, {
	
	.source = "skin://gfx/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	widget(icon, {
	  .alpha = select(ENABLED, 1,  0.2);
	  .source = ICON;
	  .sizeScale = SCALE;
	  .shadow = true;
	  .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	});
      });
      _gloss();
    });
    widget(label, {
      .caption = CAPTION;
      .align = center;
      .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
    });
  });
}




#define _glossycontainer(BODY) {
  widget(container_z, {
    .filterConstraintX = true;
    widget(backdrop, {
      .source = "skin://gfx/bar4.png";
      .border = [6,4,6,4];
      .color = BASECOLOR();
      BODY
    });
    _gloss();
  });
}

#define _glossycontainer2(BODY) {
  widget(container_z, {
    widget(backdrop, {
      .source = "skin://gfx/bar3.png";
      .border = [2,4,2,4];
      .padding = [5,0,5,0];
      .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
      BODY
    });
    _gloss();
  });
}


#define _glossySelection(ICON, TYPE, EVENT, ENABLED=true, SCALE=1.0) {
  widget(displacement, {
    .hidden = !ENABLED;
    .padding = iir(isPressed() * 2, 3, true);
    widget(container_z, {
      widget(backdrop, {
	.focusable = 0.1;
	onEvent(activate, EVENT);
	
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	.source = "skin://gfx/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	
	
	widget(container_z, {
	  widget(icon, {
	    .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	    .shadow = true;
	    .source = ICON;
	    .sizeScale = SCALE;
	  });
	  
	  widget(icon, {
	    .alpha = iir($page.glw.curView == TYPE, 4);
	    .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	    .shadow = true;
	    .source = "skin://icons/Selected.png";
	    .sizeScale = SCALE;
	  });
	});
      });
      _gloss();
    });
  });
}
