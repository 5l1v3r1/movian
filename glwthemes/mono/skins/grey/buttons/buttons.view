// Common file for all buttons


#define _gloss() {
  widget(backdrop, {
    .additive = true;
    .source = "skin://gfx/bar-gloss.png";
    .border = [2,4,2,4];
    .padding = [5,0,5,0];
    .color = [0.3, 0.3, 0.3];
  });
}

#define _glossybutton(ICON, EVENT, ENABLED=true, HIDDEN=false) {
  widget(container_z, {
    widget(backdrop, {
      .hidden = HIDDEN;
      .focusable = ENABLED;
    
      .source = "skin://gfx/bar3.png";
      .border = [2,4,2,4];
      .padding = [5,0,5,0];
      .color = [0.6, 0.6, 0.6] * (1 + (isHovered() || isFocused()));

      onEvent(activate, EVENT);
      
      widget(icon, {
	.alpha = select(ENABLED, 1,  0.2);
	.source = ICON;
	.sizeScale = 1.5;  // should be a def
	.shadow = true;
	.color = [0.6, 0.6, 0.6] * (1 + (isHovered() || isFocused()));
      });
    });
    _gloss();
  });
}


#define _glossycontainer(BODY) {
  widget(container_z, {
    .filterConstraintX = true;
    widget(backdrop, {
      .source = "skin://gfx/bar4.png";
      .border = [6,4,6,4];
      .color = [0.6, 0.6, 0.6];
      BODY
    });
    _gloss();
  });
}


#define _glossySelection(ICON, TYPE, EVENT, ENABLED=true) {
  widget(container_z, {
    .hidden = !ENABLED;
    widget(backdrop, {
      .focusable = 0.1;
      onEvent(activate, EVENT);
      
      .color = [0.6, 0.6, 0.6] * (1 + (isHovered() || isFocused()));
      .source = "skin://gfx/bar3.png";
      .border = [2,4,2,4];
      .padding = [5,0,5,0];
      
      
      widget(container_z, {
	widget(icon, {
	  .color = [0.6, 0.6, 0.6] * (1 + (isHovered() || isFocused()));
	  .shadow = true;
	  .source = ICON;
	  .sizeScale = 1.5; // should be a def
	});
	
	widget(icon, {
	  .alpha = iir($page.glw.curView == TYPE, 4);
	  .color = [0.6, 0.6, 0.6] * (1 + (isHovered() || isFocused()));
	  .shadow = true;
	  .source = "theme://icons/48x48/Selected.png";
	  .sizeScale = 1.5; // should be a def
	});
      });
    });
    _gloss();
  });
}
