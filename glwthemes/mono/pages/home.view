#include "theme://include/buttons.view"
#import "theme://include/separators.view"

$page.glw.title = "Home";

#define COL() {[0.45, 0.45, 0.5]}

#define SERVICE_TYPE_LISTER(TITLE, NODES, HIDDEN, ICON, COLOR, P1) {
  widget(container_y, {
    .align = center;
    P1 = isFocused();
    .width = $ui.fontsize * 10;
    .hidden = HIDDEN;
    widget(image, {
      .color = select(P1, [1.0, 1.0, 1.0], COLOR);
      .shadow = true;
      .source = ICON;
      .height = $ui.fontsize * 4;
      .align = center;
    });

   
    widget(list_y, {
      .height = 128;
      cloner(NODES, backdrop, {

	PLATE_GFX();

	onEvent(activate, navOpen($self.url));

	.focusable = true;
	.focusOnClick = true;
	.color = COLOR;
	.alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
	
	widget(container_x, {

	  widget(label, {
	    .align = center;
	    .ellipsize = true;
	    .caption = $self.title;
	    .color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
	  });
/*
	  widget(icon, {
	    .align = right;
	    .shadow = true;
	    .source = $self.icon;
	    .sizeBias = -4;
	    .hqScaling = true;
	    .alpha = select(isFocused(), 1.0, 0.2);
	  });
*/
	});
      });
    });
  });
}


widget(container_y, {

  space(0.25);

  
  widget(container_x, {
    space(1);
    widget(backdrop, {
      .weight = 2;
      .filterConstraintX = true;
      .alphaSelf = $view.searchAlpha;
      .color = [0.45, 0.45, 0.5];
      .source = "theme://graphics/shadedplate.png";
      .border =  [4, 4, 4, 4];
      .padding = [0, -2, -2, -2];

      widget(container_x, {
       .filterConstraintX = true;
        widget(icon, {
          .source = "theme://icons/48x48/Search.png";
          .alpha = $view.searchAlpha;
        });

        widget(backdrop, {
         .weight = 2;
         .filterConstraintX = true;
         .color = [0.0, 0.0, 0.0];
         .source = "theme://graphics/shadedplate.png";
         .border =  [4, 4, 4, 4];
         .padding = [0, -2, 0, -2];

         widget(text, {
           bind($view.searchQuery);
           .focusable = 0.01;
           $view.searchAlpha = 0.3 + iir(isFocused() * 0.7, 8) + isHovered() * 0.1;

	   onEvent(enter, navOpen("search:" + $view.searchQuery));
         });
       });
    });
  });
    space(1);
  });

    space(0.10);

  widget(container_x, {
    .align = center;
    
    SERVICE_TYPE_LISTER("Music", $global.services.music.nodes,
			!$global.services.music.entries,
			"theme://icons/mediasources/music.png",
			PLATE_COLOR_AUDIO(), $view.musicFocused);
			

    SERVICE_TYPE_LISTER("Video", $global.services.video.nodes,
			!$global.services.video.entries,
			"theme://icons/mediasources/movies.png",
			PLATE_COLOR_VIDEO(), $view.videoFocused);

    SERVICE_TYPE_LISTER("TV", $global.services.tv.nodes,
			!$global.services.tv.entries,
			"theme://icons/mediasources/tv.png",
			PLATE_COLOR_TV(), $view.tvFocused);

    SERVICE_TYPE_LISTER("Photos", $global.services.image.nodes,
			!$global.services.image.entries,
			"theme://icons/mediasources/pictures.png",
			PLATE_COLOR_IMAGE(), $view.photosFocused);

    SERVICE_TYPE_LISTER("Other", $global.services.other.nodes,
			!$global.services.other.entries,
			"theme://icons/mediasources/other.png",
			PLATE_COLOR_OTHER(), $view.otherFocused);
   });

    space(0.40);

  widget(container_x, {
    .padding = [3, 3, 3, 3];
    .align = right;

    BUTTON_SMALL("Settings", "theme://icons/48x48/Settings.png", 
		 navOpen("settings:"), COL(), false, 0.3);

    BUTTON_SMALL("Stand by", "theme://icons/48x48/Power.png", 
		 event(Standby), COL(), 
		 !$global.runcontrol.canStandby, 0.3);

    BUTTON_SMALL("Exit", "theme://icons/48x48/Exit.png", 
		 event(Quit), COL(), 
		 $global.runcontrol.canStandby || !$ui.fullscreen, 0.3);
  });

  widget(dummy, { .height = 16; });
});