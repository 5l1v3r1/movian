#import "theme://include/defs.view"

// If playstatus is set to stop, close the page
$self.close = $self.media.playstatus == "stop";

$view.statsAlpha = iir($self.media.stats, 8);

widget(container_z, {
  widget(video, {
    .source = $self.url;
  });


  /**
   * 
   */
  widget(container_y, {

    widget(container_x, {
      .align = center;
      widget(backdrop, {

	PLATE_GFX();

	.alpha = iir(changed($self.media.seektime, 2, true), 7);
	.color = PLATE_COLOR_VIDEO();

	widget(label, {
	  .caption = "Seeking to " + value2duration($self.media.seektime);
	});
      });
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "Source: " + $self.media.metadata.format;
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "Video codec: " + $self.media.video.codec;
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "Audio codec: " + $self.media.audio.codec;
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "Video queue len: " + int2str($self.media.video.dqlen);
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "Audio queue len: " + int2str($self.media.audio.dqlen);
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "Video decode time: " +
	int2str($self.media.video.decodetime_avg) + " ms";
    });

    widget(label, {
      .alpha = $view.statsAlpha;
      .caption = "A/V diff: " +
	int2str($self.media.avdiff * 1000) + " ms";
    });


  });
});
