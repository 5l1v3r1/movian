widget(container_y, {

  .alpha = 1 - iir(clamp(getLayer(), 0, 1), 7) * 0.5;
  .blur  = iir(clamp(getLayer(), 0, 1), 7);

  space(1);
  .spacing = 10;

  widget(label, {
    .align = center;
    .caption = "Showtime Mediacenter";
    .sizeScale = 3;
  });

  widget(label, {
    .align = center;
    .caption = $global.showtime.copyright;
    .sizeScale = 1.5;
  });

  widget(label, {
    .align = center;
    .caption = "Version: " + $global.showtime.version;
    .color = 0.5;
    .sizeScale = 1.5;
  });


  space(2);

  widget(container_x, {
    .padding = 20;

    widget(container_y, {
      .filterConstraintX = true;
      .align = top;

      widget(label, {
	.caption = "Display info";
	.color = 0.7;
	.sizeScale = 1.5;
      });

      widget(label, {
	.caption = fmt("Width: %d px", $ui.width);
	.color = 0.7;
      });

      widget(label, {
	.caption = fmt("Height: %d px", $ui.height);
	.color = 0.7;
      });

      widget(label, {
	.caption = fmt("Framerate: %.2f Hz", $ui.framerate);
	.color = 0.7;
      });

      widget(label, {
	.autohide = true;
	.caption = "GPU: " + $ui.gpu.name;
	.color = 0.7;
      });

      widget(label, {
	.autohide = true;
	.caption = "Renderer: " + $ui.rendermode;
	.color = 0.7;
      });

      widget(label, {
	.autohide = true;
	.caption = "Windowmanager: " + $ui.windowmanager;
	.color = 0.7;
      });
    });


    widget(container_y, {
      .filterConstraintX = true;
      .align = top;
      widget(label, {
	.caption = "System info";
	.color = 0.7;
	.sizeScale = 1.5;
      });

      widget(label, {
	.hidden = !$global.system.cpuinfo.available;
	.caption = fmt("Detected CPUs: %d", count($global.system.cpuinfo.cpus));
	.color = 0.7;
      });

      widget(label, {
	.hidden = !$global.system.mem.systotal;
	.caption = fmt("Total system RAM: %d kB", $global.system.mem.systotal);
	.color = 0.7;
      });

      widget(label, {
	.hidden = !$global.system.mem.sysfree;
	.caption = fmt("Avail system RAM: %d kB", $global.system.mem.sysfree);
	.color = 0.7;
      });
    });
  });
});