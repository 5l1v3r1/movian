#import "theme://include/defs.view"
#import "theme://include/buttons.view"
#import "theme://include/separators.view"

widget(container_x, {
  space(0.2);

  widget(container_y, {

    .weight = 1.0;

    .align = center;
    
    widget(backdrop, {
      .filterConstraintX = true;
      PLATE_GFX();
      .alphaSelf = 0.8;
      .color = PLATE_COLOR_AUTH();
      
      widget(container_y, {

	widget(container_x, {
	  widget(icon, {
	    .color = [1.0, 0.8, 0.2];
	    .source = "skin://icons/Lock.png";
	    .sizeScale = 2;
	  });

	  VERTICAL_SEPARATOR();

	  widget(container_y, {
	    widget(label, {
	      .align = left;
	      .caption = $self.source ?? $self.id;
	    });
	    widget(label, {
	      .align = left;
	      .caption = $self.reason;
	    });
	  });
	});
	HORIZONTAL_SEPARATOR();

	widget(label, {
	  .caption = "Username:";
	  .sizeScale = 0.66;
	});
      
	widget(backdrop, {
	  PLATE_GFX();
	  .color = PLATE_COLOR_AUTH() * 0.2;

 	  widget(text, {
	    .id = "username";
	    .focusable = true;
	    bind($self.username);

	    onEvent(enter, deliverEvent($self.eventSink, "Ok"));
	    onEvent(cancel, deliverEvent($self.eventSink));
	  });
	});

	widget(label, {
	  .caption = "Password:";
	  .sizeScale = 0.66;
	});
      
	widget(backdrop, {
	  PLATE_GFX();
	  .color = PLATE_COLOR_AUTH() * 0.2;

	  widget(text, {
	    .id = "password";
	    .focusable = true;
	    .password = true;
	    bind($self.password);
	    onEvent(enter, deliverEvent($self.eventSink, "Ok"));
	    onEvent(cancel, deliverEvent($self.eventSink));
	  });
	});

	HORIZONTAL_SEPARATOR();

	widget(container_x, {
	  .align = center;
	  .spacing = 20;
	  .homogenous = true;

	  BAR_BUTTON("OK", 
		     deliverEvent($self.eventSink, "Ok"),
		     false, "skin://icons/Check.png");

	  BAR_BUTTON("Cancel", 
		     deliverEvent($self.eventSink, "Cancel"),
		     false, "skin://icons/Delete.png");
	});
      });
    });
  });
  space(0.2);
});
