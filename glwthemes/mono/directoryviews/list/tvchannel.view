#import "theme://include/defs.view"

widget(backdrop, {

  $view.focused = delay(isFocused(), 0.5, 0.0);

  .autoRefocusable = true;
  .focusable = 1.0;
  .focusOnClick = true;
  .filterConstraintX = true;
  onEvent(enter, navOpen($self.url));

  .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;

  .color = PLATE_COLOR_VIDEO();
  PLATE_GFX();
  

  widget(container_y, {

    widget(container_x, {

	
      widget(label, {
	.weight = 1.0;
	.filterConstraintX = true;
	.color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_VIDEO());
	.caption = $self.metadata.title;
	.ellipsize = true;
	.align = left;
      });

      widget(container_y, {
	.weight = 2.0;
	.filterConstraintX = true;

	cloner($self.metadata.events, container_x, {
	  
	  widget(label, {
	    .color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_VIDEO());
	    .align = left; 
	    .caption = $self.title;
	    .ellipsize = true;
	  });
	  
	  widget(label, {
	    .color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_VIDEO());
	    .caption = strftime($self.start, "%H:%M") + " - " + 
	      strftime($self.stop, "%H:%M");
	  });
	}, 0, 1);
      });
    });

    widget(expander_y, {

      .expansion = scurve($view.focused, 0.15);
      .alpha     = scurve($view.focused, 0.15);

      widget(container_x, {

	widget(dummy, {
	  .weight = 1.0;
	});

	widget(container_y, {
	  .weight = 2.0;
	  .filterConstraintX = true;
	  
	  cloner($self.metadata.events, container_x, {
	    
	    widget(label, {
	      .color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_VIDEO());
	      .align = left; 
	      .caption = $self.title;
	      .ellipsize = true;
	    });
	    
	    widget(label, {
	      .color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_VIDEO());
	      .caption = strftime($self.start, "%H:%M") + " - " + 
		strftime($self.stop, "%H:%M");
	    });
	  }, 1, 2);
	});
      });
    });
  });
});