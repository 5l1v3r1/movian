#import "theme://include/defs.view"
#import "theme://include/separators.view"


#define SIMPLE_ITEM(TITLE, EVENT, COLOR, TOP) {

  widget(container_y, {
    .autoRefocusable = true;
    .focusable = 1.0;
    .focusOnClick = true;
    onEvent(activate, EVENT);

    TOP;
    
    widget(backdrop, {

      PLATE_GFX();

      .color = COLOR;
      .alphaSelf = 0.05 + iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
    
      widget(label, {
	.sizeScale = 0.75;
	.align = center;
	.ellipsize = true;
	.caption = TITLE;
	.color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
      });
    });
  });
}


#define SIMPLE_ITEM_ICON(TITLE, ICON, EVENT, COLOR) {

  SIMPLE_ITEM(TITLE, EVENT, COLOR, widget(image, {
    .color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
    .source =  ICON;
    .shadow = true;
    .align = bottom;
  }));
}

#define SIMPLE_ITEM_IMAGE(TITLE, IMAGE, EVENT, COLOR) {

  SIMPLE_ITEM(TITLE, EVENT, COLOR, widget(image, {
    .color = [1.0,1.0,1.0] * (0.5 * isFocused() + 0.2 * isHovered() + 0.5);
    .source = IMAGE;
    .hqScaling = true;
    .align = bottom;
    .alpha = iir(isReady(), 10);
    .saturation = 1 - iir(isReady(), 10);
  }));
}

#define SIMPLE_ITEM_ICON_IMAGE(TITLE, ICON, IMAGE, EVENT, COLOR) {

  SIMPLE_ITEM(TITLE, EVENT, COLOR, widget(image, {
    .source = IMAGE ?? ICON;
    .alpha = iir(isReady(), 5);
    .saturation = 1 - iir(isReady(), 10);
    .hqScaling = select(IMAGE, true, false);
    .shadow    = select(IMAGE, false, true);
    .color = select(isFocused(),  [1.0, 1.0, 1.0],
		    select(IMAGE, [0.5, 0.5, 0.5], COLOR) + 
		    select(isHovered(), 1, 0) * [0.2, 0.2, 0.2]);

  }));
}