#import "theme://include/separators.view"

#define AUTOFADE() {
//  .alpha = 0.3 + scurve(clamp(isFocused() + $view.change, 0, 1), 0.1, 10);
//  .blur = 1 - scurve(select(isFocused(), 1, $view.change), 0.1, 10);
}


#define DIVIDER(TITLE) {
  widget(container_y, {
    .padding = [20, 0];
    AUTOFADE();
     widget(label, {
      .caption = TITLE;
      .sizeScale = 1.5;
      .outline = true;
      .shadow = true;
    });
    HORIZONTAL_SEPARATOR();
  });
}



#define ITEM(ICON, TITLE, URL) {

  widget(container_x, {
    onEvent(activate, navOpen(URL));

    .padding = [40, 0];
    .focusable = true;
    .spacing = 40;
    AUTOFADE();
    
    widget(image, {
      .width = $ui.size * 6;
      .height = $ui.size * (2 + isFocused() * 4);
      .source = ICON;
      .shadow = true;
    });
    
    widget(container_y, {
      .align = center;
      widget(label, {
	.filterConstraintX = true;
	.caption = TITLE;
	.sizeScale = 1.5 + 2 * isFocused();
	.bold = isFocused();
	.outline = true;
	.shadow = true;
	.alpha = iir(isFocused(), 5) + 0.4;
      });
/*
      widget(label, {
	.padding = [40, 0];
	.filterConstraintX = true;
	.caption = "bla bla bla 0 123 foo bar";
	.bold = isFocused();
	.outline = true;
	.shadow = true;
	.alpha = iir(isFocused(), 5) + 0.4;
	.sizeScale = 1 + isFocused();
      });
*/
    });
  });
}


#define TYPED_ITEM(ICON, TYPE, TITLE, URL) {
  ITEM(ICON ?? "theme://svg/" + 
       translate(TYPE, "Folder",
		 "music",    "Music",
		 "video",    "Movie",
		 "tv",       "Display",
		 "usb",      "Usb",
		 "dvd",      "Disc",
		 "cd",       "Disc",
		 "bluray",   "Disc",
		 "photos",   "Pictures") + ".svg",
       TITLE,
       URL);
}

widget(container_x, {

  $page.backdrop = $view.focused.backdrop ??
    translate($view.focused.type, void,
	      "music", "/Users/andoma/Downloads/music.jpg");

  widget(clist, {
    .filterConstraintX = true;
    .center = 0.2;
    .spacing = $ui.size / 2;

    $view.focused = focusedChild();

    $view.change = changed($view.focused, 1);


    // Search

    widget(container_x, {
      .padding = [40, 0];
      .spacing = 40;
      AUTOFADE();

      widget(image, {
	.width = $ui.size * 4;
	.source = "theme://svg/Search.svg";;
	.shadow = true;
      });

      widget(container_y, {
	.align = center;
	widget(backdrop, {
	  .height = $ui.size * 2;
	  .filterConstraintX = true;
	  .color = [0.45, 0.45, 0.5];
	  .source = "theme://graphics/shadedplate.png";
	  .border =  [4, 4, 4, 4];
	  .padding = [0, -2, -2, -2];
	  
          widget(backdrop, {
            .filterConstraintX = true;
            .color = [0.0, 0.0, 0.0];
            .source = "theme://graphics/shadedplate.png";
            .border =  [4, 4, 4, 4];
            .padding = [0, -2, 0, -2];
	    
            widget(text, {
	      .focusable = true;
              bind($view.searchQuery);
	      .sizeScale = 1.5;
	      onEvent(enter, navOpen("search:" + $view.searchQuery));
            });
	  });
	});
      });
    });


    DIVIDER("Video");

    cloner(propSorter($global.sources, "node.title",
		      "node.type", neq, "video", exclude),
	   container_z, {
	     TYPED_ITEM($self.icon, $self.type, $self.title, $self.url);
    });

    DIVIDER("Audio");

    cloner(propSorter($global.sources, "node.title",
		      "node.type", neq, "music", exclude),
	   container_z, {
	     TYPED_ITEM($self.icon, $self.type, $self.title, $self.url);
    });


    DIVIDER("TV");

    cloner(propSorter($global.sources, "node.title",
		      "node.type", neq, "tv", exclude),
	   container_z, {
	     TYPED_ITEM($self.icon, $self.type, $self.title, $self.url);
    });

    DIVIDER("System");

    ITEM("theme://svg/Settings.svg", _("Settings"), "settings:");
    ITEM("theme://svg/Info.svg", _("About Showtime"), "page:about");
    ITEM("theme://svg/Plugin.svg", _("Plugins"), "plugin:start");


  });
});