#include "theme://include/separators.model"
#include "theme://include/plates.model"


.filterConstraintY = true;

widget(container_y, {

  widget(container_x, {
    /* Media sources */

    widget(container_y, {

      .filterConstraintY = true;

      widget(label, {
	.align = left;
	.sizeBias = 9 + 3;
	.caption = "Media sources";
	.ellipsize = true;
      });

      HORIZONTAL_SEPARATOR();

      widget(container_x, {
      
	.filterConstraintX = true;

	widget(list_y, {
	  .id = "list";
	  cloner($global.sources, backdrop, {
	    SHADED_PROPS();

	    widget(container_x, {

	      widget(image, {
		.source = $self.icon;
	      });

	      VERTICAL_SEPARATOR();

	      widget(container_y, {

		widget(label, {
		  .caption = $self.title;
		  .ellipsize = true;
		  .align = left;
		  .sizeScale = 1.34;
		});

		widget(label, {
		  .caption = $self.status;
		  .ellipsize = true;
		  .align = left;
		  .sizeScale = 0.66;
		});

		widget(container_x, {
		  .filterConstraintX = true;

		  cloner($self.links, backdrop, {
		    BUTTON_PROPS(0.99);

		    onEvent(enter, navOpen($self.url));
		
		    widget(label, {
		      .caption = $self.title;
		    });
		  });
		});
	      });
	    });
	  });
	});

    
	widget(slider_y, {
	  .width = SLIDER_WIDTH();
	  .focusable = 0.2;
	  bind("list");
	
	  widget(backdrop, {
	    KNOB_PROPS();
	  });
	});
      });
    });


    VERTICAL_SEPARATOR();

    widget(container_y, {

      .filterConstraintY = true;

      widget(label, {
	.align = left;
	.sizeBias = 9 + 3;
	.caption = "Bookmarks";
      });

      HORIZONTAL_SEPARATOR();


      widget(container_x, {
      
	.filterConstraintX = true;

	widget(list_y, {
	  .id = "list";
	  cloner($global.settings.bookmarks.nodes, backdrop, {
	    BUTTON_PROPS(0.99);

	    onEvent(enter, navOpen($self.url));

	    widget(label, {
	      .caption = $self.title;
	      .ellipsize = true;
	      .align = left;
	    });
	  });
	});
    
	widget(slider_y, {
	  .width = SLIDER_WIDTH();
	  .focusable = 0.2;
	  bind("list");
	
	  widget(backdrop, {
	    KNOB_PROPS();
	  });
	});
      });
    });
  });

  HORIZONTAL_SEPARATOR();

  widget(container_x, {

    .align = right;

    ACTION_BUTTON2("Settings", "theme://icons/32x32/process.png", 
		   navOpen("settings:"));
  });
});



/*

  space(0.3);

  widget(container_x, {
    .align = center;
    cloner($global.settings.bookmarks.nodes, backdrop, {
      MAINMENU_ITEM(devoidify($self.icon, "theme://icons/dir.png"),
		    $self.title, $self.url);
    });
  });

  space(0.3);

  widget(container_x, {
    .align = center;

  });

  space(0.3);

  widget(container_x, {
    .align = center;

    widget(backdrop, {
      MAINMENU_ITEM("theme://icons/config.png", "Settings", "settings:");
    });

    widget(backdrop, {
      MAINMENU_ITEM("theme://icons/playqueue.png", "Playqueue", "playqueue:");
    });

  });


  space(0.3);
});

*/
