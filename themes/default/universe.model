#include "theme://include/playstatus.model"


widget(container_z, {
  .displacement = [0, 0, 1];

  widget(container_y, {
    widget(mirror, {
      .displacement = [0, 0, -1];
      .weight = 12.0 / global.uiscale;
      .color = [0.01, 0.03, 0.2];
      widget(deck, {
	.id = "application_instance_container";
      });
    });

    widget(bitmap, {
      .weight = 1 - global.fullscreen;
      .color = [0.01, 0.03, 0.2];
      .borderScale = true;
      .source = "theme://images/plate-compact.png";
      .textureBorders = [0.5,  0.5,  0.5,  0.5];
      .vertexBorders  = [0.05, 0.05, 0.05, 0.05];
      
      widget(container_x, {
	
	PLAYSTATUS_WIDGET(global.currentmedia.playstatus, 1.0);
	
	widget(container_y, {
	  .weight = 8.0;
	  widget(label, { .caption = global.currentmedia.meta.title; 
	                  .weight = 1.5;});
	  widget(label, { .caption = global.currentmedia.meta.author; });
	  widget(label, { .caption = global.currentmedia.meta.album;  });
	});

	widget(container_y, {
	  .weight = 3.0;

	  widget(container_x, {
	    .weight = 1.3;
	    widget(label, {.caption = int2duration(global.currentmedia.currenttime); .align  = right; });
	    widget(label, {.caption = "/"; .weight = 0.2; .alpha = isset(global.currentmedia.meta.totaltime);});
	    widget(label, {.caption = int2duration(global.currentmedia.meta.totaltime); .align = left;  });
	  });
	  
	  widget(container_y, {
	    .weight = 1.7;
	    .alpha = isset(global.currentmedia.meta.playlist.nexttrack);

	    widget(label, { .caption = "Next track:"; .weight = 0.7; });
	    widget(label, { .caption = global.currentmedia.meta.playlist.nexttrack; });
	  });
	});
      });
    });
  });
    
  widget(container_y, {
    /* Not so good .. */
    .debug = true;
    .id = "auth_query_container";
  });

  widget(container_x, {
    space(0.5);
    widget(container_y, {
      space(1.0);

      widget(container_z, {
	.alpha = iir(changed(global.audio.mastervolume, 2.0), 7);

	widget(bitmap, {
	  .color = [0.3, 0.3, 0.3];
	  .borderScale = true;
	  .source = "theme://images/plate-compact.png";
	  .textureBorders = [0.5,  0.5,  0.5,  0.5];
	  .vertexBorders  = [0.05, 0.05, 0.05, 0.05];
	
	  widget(container_x, {
	    widget(label, {
	      .caption = "Master volume:";
	      .align = right;
	    });

	    widget(label, {
	      .caption = float2str(global.audio.mastervolume, 0)
		 + " dB";
	      .align = left;
	    });
	  });
	});
      });

      widget(container_z, {
	.alpha = iir(global.audio.mastermute, 7);
	widget(bitmap, {
	  .color = [0.8, 0.2, 0.1];
	  .borderScale = true;
	  .source = "theme://images/plate-compact.png";
	  .textureBorders = [0.5,  0.5,  0.5,  0.5];
	  .vertexBorders  = [0.05, 0.05, 0.05, 0.05];
	
	  widget(label, {
	    .caption = "Audio muted";
	    .align = center;
	  });
	});
      });

      space(29.0);
    });
    space(0.5);
  });
});
