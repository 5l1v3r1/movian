#include "theme://include/plates.model"

widget(container_z, {

  widget(fx_texrot, {
    .source = "theme://images/caribbean.png";
  });
  
  widget(layer, {

    /* Main display deck */
    widget(container_y, {

      widget(container_x, {
	/*
	widget(backdrop, {
	  PLATE_PROPS();
	  .alphaSelf = 0.25;

	  .weight = iir(isFocused() || isHovered(), 8) * 0.2 + 0.1;


	  widget(container_y, {
	    ACTION_BUTTON("Back", "theme://icons/back.png",
			  genericEvent(navigator, back, void));
	    
	    ACTION_BUTTON("Home", "theme://icons/home.png",
			  genericEvent(navigator, open, "page://mainmenu"));
	    
	  });
	});
	*/
	widget(deck, {
	  .weight = 1.0;

	  cloner($global.nav.pages, animator, {
	    .time = 0.3;
	    .source = "theme://pagemodels/" + $page.type + ".model";
	  });
	});
      });

      widget(backdrop, {
	PLATE_PROPS();
	.alphaSelf = 0.25;
	widget(container_y, {

	  widget(label, {
	    .caption = $global.currentmedia.metadata.title;
	  });
	  
	  widget(container_x, {
	    ACTION_ICON("theme://icons/rew.png",
			genericEvent(navigator, back, void));
	    ACTION_ICON("theme://icons/play.png",
			genericEvent(navigator, back, void));
	    ACTION_ICON("theme://icons/fwd.png",
			genericEvent(navigator, back, void));

	    widget(container_y, {
	      widget(label, {
		.size = 0.75;
		.caption = $global.currentmedia.metadata.author;
	      });
	      widget(label, {
		.size = 0.75;
		.caption = $global.currentmedia.metadata.album;
	      });
	    });
	  });

	  widget(slider_x, {
	    .debug = true;
	    .focusable = 0.2;
	    .debug = true;
	    .max = $global.currentmedia.metadata.duration;
	    bind($global.currentmedia.currenttime);
	    widget(backdrop, {
	      KNOB_PROPS();
	      widget(label, {
		.caption = value2duration($global.currentmedia.currenttime);
	      });
	    });
	  });
	});
      });
    });

    cloner($global.popups, animator, {
      .source = "theme://popups/" + $self.type + ".model";
    });
  });
  

  /*

  widget(container_x, {
    space(1);
    
    widget(stack_y, {
      .align = bottom;

      PLATE(10, [0.8, 1.0, 1.0], iir($global.audio.mastermute, 7), {
	widget(label, {
	  .caption = "Master volume: " +
	     float2str($global.audio.mastervolume, 0) + " dB";
	  .align = center;
	});
      });
      
      PLATE(10, [1.0, 0.0, 0.0], iir($global.audio.mastermute, 7), {
        widget(label, {
	  .caption = "Audio muted";
	  .align = center;
	});
      });
    });
  */


  /**
   * Global notifications 
   */
  widget(container_y, {

    cloner($global.notifications, container_x, {
      .align = right;
      
      widget(backdrop, {
	PLATE_PROPS();

	.color = [0.2, 0.3, 0.6];

	widget(label, {
	  .caption = $self.text;
	});
      });
    });
  });
});
