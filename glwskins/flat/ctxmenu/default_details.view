#import "skin://theme.view"

$view.itemBookmark <- lookup($core.bookmarks.queries, $args.url);


#define ITEM(CAPTION, ICON, EVENT) {
  widget(container_z, {
    ListItemHighlight();
    focusable: true;

    onEvent(activate, EVENT);

    widget(container_x, {
      spacing: 0.2em;
      widget(icon, {
        source: ICON;
//        source: "skin://icons/ic_check_48px.svg";
//        alpha: $view.itemBookmark.model.subtype == "bookmark";
      });

      widget(label, {
        caption: CAPTION;
      });
    });
  });

}

widget(popup, {

  clickable: true;
  onEvent(activate, {
    $clone.itemMenu = void;
  }, true, true, true);

  widget(container_z, {
    clickable: true;
    widget(quad, {
      alpha: 0.7;
      color: 0;
    });
    widget(container_y, {

      padding:[1em, 0.5em];
      ITEM(_("Bookmarked"),
           select($view.itemBookmark.model.subtype == "bookmark",
                  "skin://icons/ic_check_48px.svg",
                  ""), {
                    fireEvent(deliverRef($core.bookmarks.eventSink, $args));
                    $clone.itemMenu = void;
                    });

      cloner($core.itemhooks, container_z, {
        hidden: !($self.itemtype == $args.type || $self.itemtype == void);
        ITEM($self.metadata.title, $self.metadata.icon, {
          fireEvent(deliverRef($self.eventSink, $args));
          $clone.itemMenu = void;
        });
      });
    });
  });
});
