#import "skin://theme.view"

coreAttach($self.url, $view.stppstatus, {

  widget(container_y, {

    zbox({
      height: 3em;
      quad({
        color: select($view.stppstatus.error,
                      [0.4, 0.04, 0.04],
                      [0.04, 0.13, 0.4]);
      });
      widget(container_x, {
        widget(container_z, {
          width: 4em;

          GridItemHighlight();
          focusable: 0.1;
          onEvent(activate, {
            $self.close = 1;
          });


          icon({
            source: "skin://icons/ic_cancel_48px.svg";
            align: center;
          });
        });

        label({
          filterConstraintX: true;
          size: 1.2em;
          align: center;
          caption: select($view.stppstatus.error,
                          fmt(_("Remote control - %s"), $view.stppstatus.error),
                          fmt(_("Remote controlling %s"), $core.app.systemname));
        });

        widget(dummy, {
          width: 4em;
        });
      });
    });

    widget(layer, {
      hidden: select($view.stppstatus.error, true, false);
      filterConstraintY: true;
      alpha: iir(1 - $ui.screensaverActive, 8);
      widget(playfield, {
        effect: blend;
        noInitialTransform: true;
        alpha: 1 - iir(clamp(getLayer(), 0, 1), 7) * 0.66;

        onEvent(navOpen, deliverEvent($core.navigators.current.eventSink));
        onEvent(reloadData, deliverEvent($core.navigators.current.eventSink));
        onEvent(back, deliverEvent($core.navigators.current.eventSink));
        onEvent(playTrackFromSource, deliverEvent($core.playqueue.eventSink));

        cloner($core.navigators.current.pages, container_z, {

          widget(loader, {
	    noInitialTransform: true;
	    source: select(isVoid($self.model.type),
                           "skin://pages/back.view",
                           "skin://pages/" + $self.model.type + ".view");
          });

        });
      });
    });
  });
});
